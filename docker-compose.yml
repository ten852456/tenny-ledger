services:
  postgres:
    image: postgres:15
    container_name: tenny-postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      POSTGRES_DB: tenny_ledger
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - tenny-network
    secrets:
      - postgres_password

  backend:
    container_name: tenny-backend
    depends_on:
      postgres:
        condition: service_healthy
    build:
      context: ./rust-backend
      dockerfile: Dockerfile
    environment:
      - DATABASE_URL=postgres://postgres:${POSTGRES_PASSWORD:-password}@postgres:5432/tenny_ledger
      - RUST_LOG=debug
      - RUST_BACKTRACE=1
      - HOST=0.0.0.0
      - PORT=8080
      - UPLOAD_DIR=/app/uploads
      # The Google Vision API key is now loaded from secrets
      # If not configured, the app will fall back to Tesseract OCR
    ports:
      - "8080:8080"
    volumes:
      - ./uploads:/app/uploads
    networks:
      - tenny-network
    secrets:
      - jwt_secret
      - google_vision_api_key

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: tenny-frontend
    depends_on:
      - backend
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=/api/proxy
      - RUST_API_URL=http://backend:8080
    networks:
      - tenny-network

networks:
  tenny-network:
    driver: bridge

volumes:
  postgres-data:

# Define secrets - in production, use external secrets
secrets:
  postgres_password:
    file: ./secrets/postgres_password.txt
  jwt_secret:
    file: ./secrets/jwt_secret.txt
  google_vision_api_key:
    file: ./secrets/google_vision_api_key.txt 